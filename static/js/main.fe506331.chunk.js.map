{"version":3,"sources":["icons/heart.svg","icons/menu.svg","serviceWorker.ts","model/Movie.ts","components/Gauge/Gauge.tsx","components/Rectangle/Rectangle.tsx","components/MovieItem/MovieItem.tsx","components/MoviesList/MoviesList.tsx","components/Button/Button.tsx","components/SearchBar/SearchBar.tsx","components/Modal/Modal.tsx","components/ActorItem/ActorItem.tsx","components/ActorList/ActorList.tsx","components/MovieShow/MovieShow.tsx","components/Table/TCell/TCell.tsx","components/Table/TRow/TRow.tsx","components/Table/TPart/TBody/TBody.tsx","components/Table/TPart/TFoot/TFoot.tsx","components/Table/TPart/THead/THead.tsx","components/Table/Table.tsx","components/MenuBar/MenuBar.tsx","components/Home/Home.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","REACT_APP_TOKEN","REACT_APP_TMBD_KEY","getData","a","url","axios","get","trim","headers","Authorization","catch","exception","console","error","response","log","data","results","map","movie","title","posterPath","poster_path","releaseDate","release_date","id","voteAverage","vote_average","overview","query","params","language","findDetails","movieId","api_key","findCast","getFavorites","jsonFav","localStorage","getItem","JSON","parse","isInFavorites","filmId","includes","Gauge","props","angleOffset","Math","PI","max","min","note","ECOLORS","ratio","angle","getColor","color","WHITE","GREEN","RED","className","style","viewBox","xmlns","version","d","fill","bgGaugeColor","cos","sin","stroke","strikeGaugeColor","strokeWidth","cx","cy","r","x","y","dominantBaseline","textAnchor","fontFamily","fontSize","fontGaugeColor","Rectangle","Date","now","slice","width","height","x1","y1","x2","y2","offset","stopColor","secondaryColor","stopOpacity","primaryColor","textColor","text","MovieItem","onClick","border","Film","undefined","position","top","left","alt","src","MoviesList","movies","filter","re","RegExp","search","test","key","onClickItem","Button","name","submit","type","value","SearchBar","onSearch","useState","currentValue","setCurrentValue","useEffect","onSubmit","event","preventDefault","placeholder","onChange","target","Modal","onClose","stopPropagation","children","ActorItem","person","profile_path","character","ActorList","actors","actor","icon","require","MovieShow","infos","setInfos","isFavorite","setIsFavorite","details","crew","cast","fetchMovieDetails","result","f","setItem","stringify","favorites","backdrop_path","boxSizing","overflow","padding","DataCell","HeaderCell","TCell","Comp","header","col","content","TRow","onClickCell","row","index","cells","cell","TableBody","rows","TableFooter","TableHeader","isSortable","onSort","priority","setPriority","Map","sort","setSort","tempMap","clickedItem","set","alpha","copy","Table","hRows","bRows","fRows","displayedRows","setDisplayedRows","sortMap","tb","forEach","push","b","tmpRows","element","rowIndex","direction","aC","bC","toLowerCase","localeCompare","isNaN","startRows","sortRowsByCol","menu","MenuBar","Home","setSearch","movieShowed","setMovieShowed","setMovies","Data","then","movieTableData","cols","Object","keys","tmp","moviesToTableData","encodeURIComponent","mov","find","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fe506331.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.baf95af3.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.31b1530d.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\n\nexport default interface Movie {\n  title: string;\n  posterPath: string;\n  releaseDate: string;\n  id: number;\n  voteAverage: number;\n  backdrop_path: string;\n  overview: string;\n}\n\nconst REACT_APP_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmOGZjNmQ3OTVlMzhiNmI1NTdmOWNhN2FhZTFjYzViMyIsInN1YiI6IjVmN2NmNmFmZmRmYzlmMDAzOGI1OTBkNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7mm9P-EFL-HdQVo2gxao0egAaHujxrm3XiuUzWiLnDY';\nconst REACT_APP_TMBD_KEY = 'f8fc6d795e38b6b557f9ca7aae1cc5b3';\n\nexport const getData = async (url: string = ''): Promise<Movie[]> => {\n  const response = await axios\n    .get(url.trim() !== '' ? url : 'https://api.themoviedb.org/4/list/1', {\n      headers: {\n        Authorization: `Bearer ${REACT_APP_TOKEN}`,\n        'Content-Type': 'application/json;charset=utf-8'\n      }\n    })\n    .catch((exception) => {\n      console.error(exception);\n      throw exception;\n    });\n  console.log(response);\n  return response.data.results.map((movie: any) => {\n    return {\n      title: movie.title,\n      posterPath: movie.poster_path,\n      releaseDate: movie.release_date,\n      id: movie.id,\n      voteAverage: movie.vote_average,\n      overview: movie.overview\n    };\n  });\n};\n\nexport async function search(query: string): Promise<Movie[]> {\n  const response = await axios.get(\n    'https://api.themoviedb.org/4/search/movie',\n    {\n      params: {\n        language: 'fr-FR',\n        query\n      },\n      headers: {\n        Authorization: 'Bearer ' + REACT_APP_TOKEN,\n        'Content-Type': 'application/json;charset=utf-8'\n      }\n    }\n  );\n\n  return response.data.results.map((movie: any) => {\n    return {\n      title: movie.title,\n      posterPath: movie.poster_path,\n      releaseDate: movie.release_date,\n      id: movie.id,\n      voteAverage: movie.vote_average,\n      overview: movie.overview\n    };\n  });\n}\n\nexport async function findDetails(movieId: number) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}`,\n    {\n      params: {\n        language: 'fr-FR',\n        api_key: REACT_APP_TMBD_KEY\n      },\n      headers: {\n        Authorization: 'Bearer ' + REACT_APP_TOKEN,\n        'Content-Type': 'application/json;charset=utf-8'\n      }\n    }\n  );\n\n  return response.data;\n}\n\nexport async function findCast(movieId: number) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    {\n      params: {\n        language: 'fr-FR',\n        api_key: REACT_APP_TMBD_KEY\n      },\n      headers: {\n        Authorization: 'Bearer ' + REACT_APP_TOKEN,\n        'Content-Type': 'application/json;charset=utf-8'\n      }\n    }\n  );\n\n  return response.data;\n}\n\nexport async function getNowPlaying(movieId: number) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/now_playing`,\n    {\n      params: {\n        language: 'fr-FR',\n        api_key: REACT_APP_TMBD_KEY,\n        region: 'FR'\n      },\n      headers: {\n        Authorization: 'Bearer ' + REACT_APP_TOKEN,\n        'Content-Type': 'application/json;charset=utf-8'\n      }\n    }\n  );\n\n  return response.data;\n}\n\nexport function getFavorites() {\n  const jsonFav = window.localStorage.getItem('@MyMovieList::Favorites');\n  return jsonFav ? JSON.parse(jsonFav) : [];\n}\n\nexport function addToFavorites(filmId: number) {\n  const favorites = getFavorites();\n\n  if (!favorites.includes(filmId)) {\n    console.log('Not prensent, add : ', favorites, filmId);\n    window.localStorage.setItem(\n      '@MyMovieList::Favorites',\n      JSON.stringify([...favorites, filmId])\n    );\n  }\n}\n\nexport function isInFavorites(filmId: number) {\n  const favorites = getFavorites();\n\n  return favorites.includes(filmId);\n}\n\nexport function removeFromFavorites(filmId: number) {\n  const favoritesFilms = getFavorites();\n  const result = favoritesFilms.filter((f: number) => {\n    return f !== filmId;\n  });\n\n  window.localStorage.setItem(\n    '@MyMovieList::Favorites',\n    JSON.stringify(result)\n  );\n}\n","import React, { ReactElement } from 'react';\nimport './Gauge.sass';\n\ninterface IGauge {\n  /**\n   * The value of gauge\n   */\n  note: number;\n  /**\n   * The min end of Gauge\n   */\n  min?: number;\n  /**\n   * The max end of Gauge\n   */\n  max?: number;\n  /**\n   * To add CSS in props\n   */\n  style?: React.CSSProperties;\n  /**\n   * To define the background color of gauge\n   */\n  bgGaugeColor?: string;\n  /**\n   * To define the color of gauge\n   */\n  strikeGaugeColor?: string;\n  /**\n   * To define the color of text\n   */\n  fontGaugeColor?: string;\n}\n\nexport default function Gauge(props: IGauge): ReactElement {\n  const angleOffset = Math.PI / 2;\n  const radius = 150;\n\n  let max = props.max || 100;\n  let min = props.min || 0;\n  let note = props.note;\n  if (min > max) {\n    min = 0;\n    max = 100;\n    console.error('Invalid définition of min and max values');\n  }\n  if (note > max) {\n    note = max;\n    console.error('Note out of max range');\n  }\n  if (note < min) {\n    note = min;\n    console.error('Note out of min range');\n  }\n  const totalRange = max - min;\n  const valueRange = note - min;\n  const ratio = valueRange / totalRange;\n\n  const angle = ratio * 2 * Math.PI;\n\n  enum ECOLORS {\n    GREEN = 'green',\n    RED = 'red',\n    WHITE = 'white'\n  }\n\n  function getColor(): ECOLORS {\n    let color = ECOLORS.WHITE;\n    if (ratio > 0.75) {\n      color = ECOLORS.GREEN;\n    } else if (ratio < 0.5) {\n      color = ECOLORS.RED;\n    }\n    return color;\n  }\n  function getXValue() {\n    return 200 + Math.cos(angle + angleOffset) * radius;\n  }\n  function getYValue() {\n    return 200 - Math.sin(angle + angleOffset) * radius;\n  }\n  return (\n    <svg\n      className='Gauge'\n      style={{ ...props.style }}\n      viewBox='0 0 400 400'\n      xmlns='http://www.w3.org/2000/svg'\n      version='1.1'\n    >\n      <title>Note</title>\n      <desc>Gauge of percent satisfaction</desc>\n\n      <path\n        d='M0 200 a 200 200 0 1 0 0 -1 z'\n        fill={props.bgGaugeColor || '#FFFFFF'}\n      />\n      {ratio < 1 ? (\n        <path\n          d={`M200 50 A 150 150 0 ${\n            angle < Math.PI ? 0 : 1\n          } 0 ${getXValue()} ${getYValue()}`}\n          fill='transparent'\n          stroke={props.strikeGaugeColor || getColor()}\n          strokeWidth='20'\n        />\n      ) : (\n        <circle\n          cx='200'\n          cy='200'\n          r='150'\n          fill='transparent'\n          stroke={props.strikeGaugeColor || getColor()}\n          strokeWidth='20'\n        />\n      )}\n\n      <text\n        x='200'\n        y='200'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        fontFamily='Helvetica,Verdana, Arial, sans-serif'\n        fontSize='100'\n        fill={props.fontGaugeColor || getColor()}\n      >\n        {note}\n      </text>\n    </svg>\n  );\n}\n","import React, { ReactElement } from 'react';\n\ninterface IRectangle {\n  /**\n   * The main color of rectangle\n   */\n  primaryColor: string;\n  /**\n   * The sencond color of rectangle\n   */\n  secondaryColor: string;\n  /**\n   * The color of text in the middle of rectangle\n   */\n  textColor: string;\n  /**\n   * The Height of SVG\n   */\n  height: number;\n  /**\n   * The Width of SVG\n   */\n  width: number;\n  /**\n   * Th text to print to the user\n   */\n  text: string;\n}\n\nexport default function Rectangle(props: IRectangle): ReactElement {\n  const id = `tt${Date.now()}`.slice(0, -2);\n  return (\n    <svg\n      viewBox={`0 0 ${props.width} ${props.height}`}\n      xmlns='http://www.w3.org/2000/svg'\n      version='1.1'\n      className='Rectangle'\n    >\n      <defs>\n        <linearGradient id={id} x1='0%' y1='0%' x2='45%' y2='45%'>\n          <stop\n            offset='10%'\n            style={{ stopColor: props.secondaryColor, stopOpacity: 1 }}\n          />\n          <stop\n            offset='100%'\n            style={{ stopColor: props.primaryColor, stopOpacity: 1 }}\n          />\n        </linearGradient>\n      </defs>\n      <rect\n        width={props.width}\n        height={props.height}\n        fill={`url(#${id})`}\n        style={{ strokeWidth: 3, stroke: '#000000' }}\n      />\n      Sorry, your browser does not support inline SVG.\n      <text\n        x='50%'\n        y='50%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        fontFamily='Helvetica,Verdana, Arial, sans-serif'\n        fontSize='50'\n        fill={props.textColor}\n      >\n        {props.text}\n      </text>\n    </svg>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport Movie from '../../model/Movie';\nimport * as Film from '../../model/Movie';\nimport Gauge from '../Gauge/Gauge';\nimport './MovieItem.sass';\nimport Rectangle from '../Rectangle/Rectangle';\n\ninterface IMovieItemProps {\n  data: Movie;\n  onClick: Function;\n}\n\nexport default function MovieItem(props: IMovieItemProps): ReactElement {\n  function displayModal() {\n    props.onClick(props.data.id);\n  }\n  return (\n    <div\n      className='MovieItem'\n      onClick={displayModal}\n      style={{\n        border: Film.isInFavorites(props.data.id) ? '1px solid red' : undefined\n      }}\n    >\n      <Gauge\n        note={props.data.voteAverage}\n        max={10}\n        style={{\n          position: 'absolute',\n          width: '3em',\n          height: 'auto',\n          top: '0.5em',\n          left: '0.5em'\n        }}\n        bgGaugeColor='#222'\n      />\n      {props.data.posterPath ? (\n        <img\n          alt='poster'\n          src={`https://image.tmdb.org/t/p/w500/${props.data.posterPath}`}\n        />\n      ) : (\n        <Rectangle\n          text='Poster not found'\n          textColor='white'\n          width={500}\n          height={750}\n          primaryColor='#FF0000'\n          secondaryColor='#FFFF00'\n        />\n      )}\n      <div>\n        <h3>{props.data.title}</h3>\n        <p>{props.data.releaseDate}</p>\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport Movie from '../../model/Movie';\nimport MovieItem from '../MovieItem/MovieItem';\nimport './MoviesList.sass';\ninterface IMoviesListProps {\n  search: string;\n  movies: Movie[];\n  onClickItem: Function;\n}\n\nexport default function MoviesList(props: IMoviesListProps): ReactElement {\n  const movies = props.movies.filter((movie) => {\n    const re = new RegExp(props.search, 'gi');\n    return props.search.trim() === '' || re.test(movie.title);\n  });\n  return (\n    <div className='MoviesList'>\n      {movies.map((movie: Movie) => (\n        <MovieItem key={movie.id} data={movie} onClick={props.onClickItem} />\n      ))}\n    </div>\n  );\n}\n","import React, { CSSProperties, ReactElement } from 'react';\nimport './Button.sass';\n\ninterface IButtonProps {\n  /**\n   * The callback when button is clicked\n   */\n  onClick?: Function;\n  /**\n   * The button is an input with type submit\n   */\n  submit?: boolean;\n  /**\n   * The text content of button\n   */\n  name?: string;\n  /**\n   * The style of button\n   */\n  style?: CSSProperties;\n  /**\n   * The CSS class of button\n   */\n  className?: string;\n}\n\n/**\n * The Buttoncomponent with\n * @param props\n */\nexport default function Button({\n  name,\n  submit,\n  className,\n  onClick,\n  style\n}: IButtonProps): ReactElement {\n  return (\n    <>\n      {submit ? (\n        <input\n          type='submit'\n          value={name}\n          className={className || 'Button'}\n          onClick={() => {\n            if (onClick) {\n              onClick();\n            }\n          }}\n          style={{ ...style }}\n        />\n      ) : (\n        <button\n          className={className || 'Button'}\n          onClick={() => {\n            if (onClick) {\n              onClick();\n            }\n          }}\n          style={{ ...style }}\n        >\n          {name}\n        </button>\n      )}\n    </>\n  );\n}\n","import React, {\n  ChangeEvent,\n  FormEvent,\n  ReactElement,\n  useEffect,\n  useState\n} from 'react';\nimport Button from '../Button/Button';\nimport './SearchBar.sass';\n\ninterface ISearchBarProps extends React.HTMLProps<HTMLFormElement> {\n  /**\n   * The callback of search bar when enter or button is clicked\n   */\n  onSearch: Function;\n}\n\n/**\n * The Search bar component with\n * @param props\n */\nexport default function SearchBar({ onSearch }: ISearchBarProps): ReactElement {\n  const [currentValue, setCurrentValue] = useState<string>('');\n  const updateIfemptySearchValue = () => {\n    if (currentValue.trim() === '') {\n      onSubmit();\n    }\n  };\n  useEffect(updateIfemptySearchValue, [currentValue]);\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setCurrentValue(event.target.value);\n  };\n  const onSubmit = (event?: FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    onSearch(currentValue);\n  };\n  return (\n    <form className='SearchBar' onSubmit={onSubmit}>\n      <input\n        placeholder='Search'\n        type='text'\n        value={currentValue}\n        onChange={onChange}\n      />\n      <Button submit name='Search' />\n    </form>\n  );\n}\n","import React, { ReactElement, ReactNode } from 'react';\nimport './Modal.sass';\ninterface IModalProps {\n  onClose: Function;\n  children: ReactNode;\n}\n\nexport default function Modal(props: IModalProps): ReactElement {\n  const onFadeClick = () => {\n    props.onClose();\n  };\n  const onPopClick = (event: any) => {\n    event.stopPropagation();\n  };\n  return (\n    <div className='ModalFade' onClick={onFadeClick}>\n      <div className='ModalContent' onClick={onPopClick}>\n        {props.children}\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport Rectangle from '../Rectangle/Rectangle';\nimport './ActorItem.sass';\nexport interface IActorItemProps {\n  picture?: string;\n  person: any;\n}\n\nfunction ActorItem(props: IActorItemProps): ReactElement {\n  return (\n    <div className='ActorItem'>\n      {props.person.profile_path ? (\n        <img\n          alt='actor'\n          src={`https://image.tmdb.org/t/p/w500${props.person.profile_path}`}\n        />\n      ) : (\n        <Rectangle\n          text='Actor not found'\n          textColor='#FFF'\n          width={500}\n          height={750}\n          secondaryColor='#00FFFF'\n          primaryColor='#0000FF'\n        />\n      )}\n\n      <p>\n        <strong>{props.person.name}</strong>\n      </p>\n      <p>{props.person.character}</p>\n    </div>\n  );\n}\n\nexport default ActorItem;\n","import React, { ReactElement } from 'react';\nimport ActorItem, { IActorItemProps } from '../ActorItem/ActorItem';\nimport './ActorList.sass';\ninterface Props {\n  actors: IActorItemProps[];\n}\n\nfunction ActorList({ actors }: Props): ReactElement {\n  return (\n    <div className={'ActorList'}>\n      {actors.map((actor: any) => (\n        <ActorItem key={actor.id} person={actor} />\n      ))}\n    </div>\n  );\n}\n\nexport default ActorList;\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport Movie from '../../model/Movie';\nimport * as Film from '../../model/Movie';\nimport ActorList from '../ActorList/ActorList';\nimport './MovieShow.sass';\nconst icon = require('../../icons/heart.svg');\n\ninterface Props {\n  data: Movie;\n}\n\nfunction MovieShow(props: Props): ReactElement {\n  const movie = props.data;\n  const [infos, setInfos] = useState({} as any);\n  const [isFavorite, setIsFavorite] = useState(\n    Film.isInFavorites(props.data.id)\n  );\n  useEffect(() => {\n    const fetchMovieDetails = async (filmId: number) => {\n      let details = await Film.findDetails(filmId).catch((exception) => {\n        console.error('ERROR', exception);\n      });\n\n      let { crew, cast } = await Film.findCast(filmId).catch((exception) => {\n        console.error('ERROR', exception);\n      });\n      let detailedFilm = {\n        details,\n        cast,\n        crew\n      };\n\n      setInfos(detailedFilm);\n    };\n\n    fetchMovieDetails(props.data.id);\n  }, [props.data.id]);\n  return (\n    <div className='MovieShow'>\n      <h1>{props.data.title}</h1>\n      <button\n        className={isFavorite ? 'active' : undefined}\n        onClick={() => {\n          isFavorite\n            ? Film.removeFromFavorites(movie.id)\n            : Film.addToFavorites(movie.id);\n          setIsFavorite(!isFavorite);\n        }}\n      >\n        <img src={icon} alt='favorite icone' />\n      </button>\n\n      {infos.details && infos.details.backdrop_path ? (\n        <img\n          alt='banner of movie'\n          className='banner'\n          src={`https://image.tmdb.org/t/p/w500${infos.details.backdrop_path}`}\n        />\n      ) : null}\n      <div\n        style={{\n          boxSizing: 'border-box',\n          overflow: 'auto',\n          padding: '2em'\n        }}\n      >\n        {props.data.posterPath ? (\n          <img\n            className='poster'\n            alt='poster'\n            src={`https://image.tmdb.org/t/p/w500/${props.data.posterPath}`}\n          />\n        ) : null}\n        <ul>\n          <li>\n            <strong>Date</strong> : {props.data.releaseDate}\n          </li>\n          <li>\n            <p>\n              <strong>Resume</strong> : {movie.overview}\n            </p>\n          </li>\n          <li>\n            <p>\n              <strong>Distribution</strong> :\n            </p>\n          </li>\n        </ul>\n        {infos.cast ? <ActorList actors={infos.cast} /> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieShow;\n","import React, { ReactElement, ReactNode } from 'react';\n\nexport interface ITCell {\n  id: string;\n  className?: string;\n  style?: React.CSSProperties;\n  content: string;\n  onClick?: Function;\n  header?: boolean;\n  children?: ReactNode;\n  col?: number;\n}\n\nfunction DataCell(props: ITCell): ReactElement {\n  function onClick() {\n    if (props.onClick) {\n      props.onClick();\n    }\n  }\n  return <td onClick={onClick}>{props.children}</td>;\n}\nfunction HeaderCell(props: ITCell): ReactElement {\n  function onClick() {\n    if (props.onClick) {\n      props.onClick();\n    }\n  }\n  return <th onClick={onClick}>{props.children}</th>;\n}\n\nexport default function TCell(props: ITCell): ReactElement {\n  function onClick() {\n    if (props.onClick) {\n      props.onClick({ id: props.id, col: props.col });\n    }\n  }\n  const Comp = props.header ? HeaderCell : DataCell;\n  return (\n    <Comp\n      id={props.id}\n      col={props.col}\n      onClick={onClick}\n      content={props.content}\n    >\n      {props.content}\n    </Comp>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport TCell, { ITCell } from '../TCell/TCell';\n\nexport interface ITRow {\n  id: string;\n  className?: string;\n  style?: React.CSSProperties;\n  onClick?: Function;\n  cells: ITCell[];\n}\n\nexport default function TRow(props: ITRow): ReactElement {\n  function onClickCell({ id, col }: any) {\n    if (props.onClick) {\n      props.onClick({ row: props.id, col: { id, index: col } });\n    }\n  }\n  return (\n    <tr id={props.id} className={props.className}>\n      {props.cells.map((cell, index) => {\n        return (\n          <TCell\n            key={cell.id}\n            id={cell.id}\n            col={index}\n            content={cell.content}\n            onClick={onClickCell}\n            header={cell.header}\n          />\n        );\n      })}\n    </tr>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport TRow, { ITRow } from '../../TRow/TRow';\n\ninterface ITableBody {\n  rows: ITRow[];\n}\n\nexport default function TableBody({ rows }: ITableBody): ReactElement {\n  return (\n    <tbody>\n      {rows\n        ? rows.map((row: ITRow) => {\n            return <TRow key={row.id} id={row.id} cells={row.cells} />;\n          })\n        : null}\n    </tbody>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport TRow, { ITRow } from '../../TRow/TRow';\n\ninterface ITableFooter {\n  rows: ITRow[];\n}\n\nexport default function TableFooter({ rows }: ITableFooter): ReactElement {\n  return (\n    <tfoot>\n      {rows\n        ? rows.map((row: ITRow) => {\n            return <TRow key={row.id} id={row.id} cells={row.cells} />;\n          })\n        : null}\n    </tfoot>\n  );\n}\n","import React, { ReactElement, useState } from 'react';\nimport TRow, { ITRow } from '../../TRow/TRow';\n\ninterface ITableHeader {\n  rows: ITRow[];\n  isSortable: boolean;\n  onSort: Function;\n}\ninterface ISort {\n  row: string;\n  col: string;\n  alpha: boolean;\n  priority: number;\n}\nexport default function TableHeader({\n  isSortable,\n  rows,\n  onSort\n}: ITableHeader): ReactElement {\n  const [priority, setPriority] = useState(0);\n  const [sort, setSort] = useState<Map<string, ISort>>(\n    new Map<string, ISort>()\n  );\n  function onClick(value: any) {\n    const tempMap = new Map(sort);\n    const clickedItem = tempMap.get(value.col.id);\n    if (clickedItem !== undefined) {\n      tempMap.set(value.col.id, {\n        ...value,\n        alpha: !clickedItem.alpha,\n        priority\n      });\n    } else {\n      tempMap.set(value.col.id, { ...value, alpha: true, priority });\n    }\n    setPriority(priority + 1);\n    setSort(tempMap);\n    onSort(tempMap);\n  }\n  return (\n    <thead>\n      {rows\n        ? rows.map((row: ITRow, index: number) => {\n            return (\n              <TRow\n                onClick={index === 0 ? onClick : undefined}\n                className={isSortable && index === 0 ? 'sortable' : undefined}\n                key={row.id}\n                id={row.id}\n                cells={row.cells}\n              />\n            );\n          })\n        : null}\n    </thead>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport './Table.sass';\nimport TableBody from './TPart/TBody/TBody';\nimport TableFooter from './TPart/TFoot/TFoot';\nimport TableHeader from './TPart/THead/THead';\nimport { ITRow } from './TRow/TRow';\n\nfunction copy(data: any) {\n  return JSON.parse(JSON.stringify(data));\n}\n\ninterface ITable {\n  id?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  onClick?: Function;\n  onChange?: Function;\n  hRows?: ITRow[];\n  bRows?: ITRow[];\n  fRows?: ITRow[];\n  isSortable?: boolean;\n  isFiltrable?: boolean;\n}\n\nfunction Table({\n  isSortable,\n  hRows,\n  bRows,\n  fRows,\n  ...props\n}: ITable): ReactElement {\n  const [displayedRows, setDisplayedRows] = useState<ITRow[]>(bRows || []);\n\n  useEffect(() => {\n    setDisplayedRows(bRows || []);\n  }, [bRows]);\n  function sortRowsByCol(rows: any, col: any, alpha: boolean) {\n    let tb = rows.map((element: any, index: number) => {\n      return { content: element.cells[col.index].content, rowIndex: index };\n    });\n    tb.sort((a: any, b: any) => {\n      const direction = alpha ? -1 : 1;\n      let r = 0;\n      const aC = a.content;\n      const bC = b.content;\n      if (typeof aC === 'string' && typeof bC === 'string') {\n        r = aC.toLowerCase().localeCompare(bC.toLowerCase());\n      } else if (!isNaN(aC) && !isNaN(bC)) {\n        if (aC > bC) {\n          r = -1;\n        } else if (aC < bC) {\n          r = 1;\n        }\n      }\n      return r * direction;\n    });\n    let startRows = copy(rows);\n    let tmpRows: any = [];\n    tb.forEach((element: any, index: number) => {\n      tmpRows.push(startRows[element.rowIndex]);\n    });\n    return copy(tmpRows);\n  }\n\n  function onSort(sortMap: any) {\n    let tb: any = [];\n    sortMap.forEach((value: any, key: string, map: Map<string, any>) => {\n      tb.push(value);\n    });\n\n    tb.sort((a: any, b: any) => {\n      if (a.priority < b.priority) {\n        return -1;\n      } else if (a.priority > b.priority) {\n        return 1;\n      }\n      return 0;\n    });\n    let tmpRows = copy(displayedRows);\n    tb.forEach((element: any, index: number) => {\n      tmpRows = sortRowsByCol(tmpRows, element.col, element.alpha);\n    });\n    setDisplayedRows(tmpRows);\n  }\n  return (\n    <table>\n      <TableHeader\n        isSortable={!!isSortable}\n        rows={hRows || []}\n        onSort={onSort}\n      />\n      <TableBody rows={displayedRows || []} />\n      <TableFooter rows={fRows || []} />\n    </table>\n  );\n}\n\nexport default Table;\n","import React, { ReactElement } from 'react';\nimport './MenuBar.sass';\nconst menu = require('../../icons/menu.svg');\nfunction MenuBar(): ReactElement {\n  return (\n    <header className='MenuBar'>\n      <img src={menu} alt='menu' />\n      <h1>TITLE</h1>\n    </header>\n  );\n}\n\nexport default MenuBar;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport Movie from '../../model/Movie';\nimport * as Data from '../../model/Movie';\nimport MoviesList from '../MoviesList/MoviesList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport './Home.sass';\nimport Modal from '../Modal/Modal';\nimport MovieShow from '../MovieShow/MovieShow';\nimport Table from '../Table/Table';\nimport { ITRow } from '../Table/TRow/TRow';\nimport MenuBar from '../MenuBar/MenuBar';\n\nfunction moviesToTableData(data: Movie[] | undefined) {\n  const hRows: ITRow[] = [];\n  const bRows: ITRow[] = [];\n  if (data) {\n    data.forEach((movie, index) => {\n      const cols = Object.keys(movie);\n      if (index === 0) {\n        hRows.push({\n          id: 'hr_0',\n          cells: cols.map((col) => {\n            return {\n              id: `hr_0_${col}`,\n              content: col,\n              header: true\n            };\n          })\n        });\n      }\n      const tmp: any = movie;\n      bRows.push({\n        id: `br_${index}`,\n        cells: cols.map((col) => {\n          return {\n            id: `br_${index}_${col}`,\n            content: tmp[col]\n          };\n        })\n      });\n    });\n  }\n\n  return {\n    hRows,\n    bRows\n  };\n}\n\nexport default function Home(): ReactElement {\n  const [search, setSearch] = useState('');\n  const [movieShowed, setMovieShowed] = useState<Movie>();\n  const [movies, setMovies] = useState<Movie[]>();\n  useEffect(() => {\n    Data.getData().then((movies) => {\n      return setMovies(movies);\n    });\n  }, []);\n  function getSearch(value: string) {\n    if (value !== search) {\n      console.log(value);\n      setSearch(value);\n      let data: Promise<any>;\n      if (value.trim() !== '') {\n        data = Data.search(encodeURIComponent(value));\n      } else {\n        data = Data.getData();\n      }\n      data.then((movies) => {\n        return setMovies(movies);\n      });\n    }\n  }\n  function showMovie(movieId: number) {\n    if (movies) {\n      const mov = movies.find((mov) => {\n        return movieId === mov.id;\n      });\n      setMovieShowed(mov);\n    }\n  }\n  const movieTableData = moviesToTableData(movies);\n  return (\n    <div className='Home'>\n      <MenuBar />\n      <SearchBar onSearch={getSearch} />\n      {movieTableData.bRows ? (\n        <Table\n          hRows={movieTableData.hRows}\n          isSortable\n          bRows={movieTableData.bRows}\n        />\n      ) : null}\n\n      {movies ? (\n        <MoviesList search={search} movies={movies} onClickItem={showMovie} />\n      ) : null}\n      {movieShowed &&\n      movieShowed.id &&\n      movieShowed.posterPath &&\n      movieShowed.releaseDate &&\n      movieShowed.title ? (\n        <Modal\n          onClose={() => {\n            setMovieShowed(undefined);\n          }}\n        >\n          <MovieShow data={movieShowed as Movie} />\n        </Modal>\n      ) : null}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport './fonts.sass';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './components/Home/Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}