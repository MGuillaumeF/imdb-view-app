{"version":3,"sources":["serviceWorker.ts","i18n.ts","logger/Logger.ts","comm/http/request.ts","model/Movie.ts","components/Button/Button.tsx","components/Button/index.tsx","icons/more.svg","components/SearchBar/index.tsx","components/SearchBar/SearchBar.tsx","components/Modal/index.tsx","components/Modal/Modal.tsx","components/Gauge/Gauge.tsx","components/Rectangle/Rectangle.tsx","components/Movies/MovieItem/MovieItem.tsx","components/Actor/ActorItem/ActorItem.tsx","components/Actor/ActorList/ActorList.tsx","icons/heart.svg","components/Movies/MovieShow/MovieShow.tsx","components/Movies/MoviesList/MoviesList.tsx","components/Table/TCell/TCell.tsx","components/Table/TRow/TRow.tsx","components/Table/TPart/TBody/TBody.tsx","components/Table/TPart/TFoot/TFoot.tsx","components/Table/TPart/THead/THead.tsx","components/Table/Table.tsx","icons/menu.svg","components/MenuBar/MenuBar.tsx","locales/TranslationKeys.ts","components/MenuBar/index.tsx","icons/flags/fr.svg","icons/image.svg","icons/table.svg","components/ToggleButton/ToggleButtonGroup.tsx","components/Home/Home.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","resources","en","translation","fr","i18n","use","LanguageDetector","initReactI18next","init","lng","fallbackLng","debug","interpolation","escapeValue","ELOG_LEVEL","Logger","level","this","msg","DEBUG","console","Date","toLocaleString","INFO","info","WARN","warn","error","trace","includes","ERROR","FATAL","instance","EPROTOCOL","ESECURE_PROTOCOL","EHTTP_METHOD","EHTTP_STATUS_CODE","EHTTP_STATUS_TEXT","LOGGER","getInstance","buildUrl","params","PROTOCOL","protocol","PATHNAME","pathname","HOSTNAME","PORT","port","QUERY","query","Object","entries","map","q","encodeURIComponent","join","href","getStatusTextByCode","statusCode","eStatusCode","sStatusText","toString","OK","BAD_REQUEST","NOT_FOUND","METHOD_NOT_ALLOWED","INTERNAL_SERVER_ERROR","PROXY_ERROR","UNREACHABLE_SERVER","text","code","request","a","url","start","now","axios","method","headers","catch","response","axiosResponse","titi","status","duration","raison","body","responseText","REACT_APP_TMBD_KEY","Authorization","movieDbAPIRequest","GET","language","i18next","exception","getData","trim","JSONResponse","JSON","parse","results","movie","title","posterPath","poster_path","releaseDate","release_date","id","voteAverage","vote_average","overview","findDetails","movieId","api_key","findCast","getFavorites","jsonFav","localStorage","getItem","isInFavorites","filmId","EBUTTON_TYPE","Button","props","type","BUTTON","className","children","name","SearchBar","onSearch","inputDefinition","t","useTranslation","searchField","useRef","onSubmit","event","preventDefault","current","value","src","more","alt","placeholder","ref","SUBMIT","Modal","onClick","onClose","stopPropagation","Gauge","angleOffset","Math","PI","max","min","note","ECOLORS","ratio","angle","getColor","color","WHITE","GREEN","RED","style","viewBox","xmlns","version","description","d","fill","bgGaugeColor","cos","sin","stroke","strikeGaugeColor","strokeWidth","cx","cy","r","x","y","dominantBaseline","textAnchor","fontFamily","fontSize","fontGaugeColor","Rectangle","slice","width","height","x1","y1","x2","y2","offset","stopColor","secondaryColor","stopOpacity","primaryColor","textColor","getEmptyPoster","MovieItem","useState","imageLoading","setImageLoading","data","border","Film","undefined","position","top","left","display","onLoad","ActorItem","person","profile_path","character","ActorList","actors","actor","key","MovieShow","infos","setInfos","isFavorite","setIsFavorite","useEffect","details","crew","cast","fetchMovieDetails","result","filter","f","setItem","stringify","favorites","icon","backdrop_path","boxSizing","overflow","padding","MoviesList","movies","re","RegExp","search","test","onClickItem","DataCell","HeaderCell","TCell","Comp","header","col","content","TRow","onClickOnRow","cells","onClickCell","row","index","cell","TableBody","rows","TableFooter","TableHeader","isSortable","dataRows","onSort","priority","setPriority","Map","sort","setSort","tempMap","clickedItem","get","set","alpha","copy","Table","hRows","bRows","fRows","displayedRows","setDisplayedRows","sortMap","tb","forEach","push","b","tmpRows","element","rowIndex","direction","aC","bC","toLowerCase","localeCompare","isNaN","startRows","sortRowsByCol","MenuBar","ETRANSLATION_KEYS","menu","ToggleButtonGroup","buttons","onChangeToggle","defaultValue","activeButton","setActiveButton","objectContent","buttonProps","e","Home","setSearch","setDisplay","movieShowed","setMovieShowed","setMovies","currentLanguage","setCurrentLanguage","Data","then","changeLang","lang","changeLanguage","movieTableData","cols","keys","tmp","moviesToTableData","TITLE","marginLeft","marginTop","margin","verticalAlign","table","image","mov","find","flexDirection","justifyContent","flagFR","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.544863d6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\n//import Backend from 'i18next-xhr-backend';\nimport en from './locales/en/translation.json';\nimport fr from './locales/fr/translation.json';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\n// not like to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\nconst resources = {\n  en: {\n    translation: en\n  },\n  fr: {\n    translation: fr\n  }\n};\ni18n\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  //.use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    resources,\n    lng: 'fr',\n    fallbackLng: ['en', 'fr'],\n    debug: true,\n    interpolation: {\n      escapeValue: false // not needed for react as it escapes by default\n    }\n  });\nexport default i18n;\n","export enum ELOG_LEVEL {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n  FATAL = 'FATAL'\n}\n\nexport class Logger {\n  /**\n   * @private\n   * @property The level of logger\n   */\n  private level: ELOG_LEVEL;\n  /**\n   * @private\n   * @static\n   * @property The logger instance to lock multi instance of Logger\n   */\n  private static instance: Logger;\n  /**\n   * @private to lock direct instance\n   * @constructor\n   * @param level The logger level\n   */\n  private constructor(level: ELOG_LEVEL) {\n    this.level = level;\n  }\n  /**\n   * @private\n   * @method trace To print message in appender\n   * @param level The level of message\n   * @param msg The message to print\n   */\n  private trace(level: ELOG_LEVEL, ...msg: any[]) {\n    switch (level) {\n      case ELOG_LEVEL.DEBUG:\n        console.debug(`[${new Date().toLocaleString()}] - [${level}]`, ...msg);\n        break;\n      case ELOG_LEVEL.INFO:\n        console.info(`[${new Date().toLocaleString()}] - [${level}]`, ...msg);\n        break;\n      case ELOG_LEVEL.WARN:\n        console.warn(`[${new Date().toLocaleString()}] - [${level}]`, ...msg);\n        break;\n      default:\n        console.error(`[${new Date().toLocaleString()}] - [${level}]`, ...msg);\n    }\n  }\n  /**\n   * @static\n   * @method getIstance To get the instance of Logger\n   */\n  public static getInstance(): Logger {\n    if (!Logger.instance) {\n      Logger.instance = new Logger(ELOG_LEVEL.INFO);\n    }\n    return Logger.instance;\n  }\n  /**\n   * @method getLogLevel To get the logger level\n   * @returns the logger level\n   */\n  public getLogLevel() {\n    return this.level;\n  }\n  /**\n   * @method setLogLevel To change logger level\n   * @param level The new level of logger\n   */\n  public setLogLevel(level: ELOG_LEVEL) {\n    this.level = level;\n  }\n  /**\n   * @method debug to print debug message\n   * @param msg The message to print\n   */\n  public debug(...msg: any[]) {\n    if (this.level === ELOG_LEVEL.DEBUG) {\n      this.trace(ELOG_LEVEL.DEBUG, ...msg);\n    }\n  }\n  /**\n   * @method info to print info message\n   * @param msg The message to print\n   */\n  public info(...msg: any[]) {\n    if ([ELOG_LEVEL.DEBUG, ELOG_LEVEL.INFO].includes(this.level)) {\n      this.trace(ELOG_LEVEL.DEBUG, ...msg);\n    }\n  }\n  /**\n   * @method warn to print warn message\n   * @param msg The message to print\n   */\n  public warn(...msg: any[]) {\n    if (\n      [ELOG_LEVEL.DEBUG, ELOG_LEVEL.INFO, ELOG_LEVEL.WARN].includes(this.level)\n    ) {\n      this.trace(ELOG_LEVEL.WARN, ...msg);\n    }\n  }\n  /**\n   * @method error to print error message\n   * @param msg The message to print\n   */\n  public error(...msg: any[]) {\n    this.trace(ELOG_LEVEL.ERROR, ...msg);\n  }\n  /**\n   * @method fatal to print fatal message\n   * @param msg The message to print\n   */\n  public fatal(...msg: any[]) {\n    this.trace(ELOG_LEVEL.FATAL, ...msg);\n  }\n}\n","import axios from 'axios';\nimport { Logger } from '../../logger';\nconst LOGGER = Logger.getInstance();\nenum EPROTOCOL {\n  FTP = 'ftp:',\n  WS = 'ws:',\n  HTTP = 'http:',\n  FILE = 'file:'\n}\n\nenum ESECURE_PROTOCOL {\n  FTPS = 'ftps:',\n  WSS = 'wss:',\n  HTTPS = 'https:',\n  SSH = 'ssh:'\n}\n\nexport enum EHTTP_METHOD {\n  GET = 'get',\n  POST = 'post',\n  PUT = 'put',\n  DELETE = 'delete',\n  PATCH = 'patch',\n  HEAD = 'head'\n}\n\nenum EHTTP_STATUS_CODE {\n  OK = 200,\n  BAD_REQUEST = 400,\n  AUTHAURIZATION = 401,\n  PERMISSON_DENIED = 403,\n  NOT_FOUND = 404,\n  METHOD_NOT_ALLOWED = 405,\n  INTERNAL_SERVER_ERROR = 500,\n  PROXY_ERROR = 502,\n  UNREACHABLE_SERVER = -1\n}\n\nenum EHTTP_STATUS_TEXT {\n  OK = 'OK',\n  BAD_REQUEST = 'Bad Request',\n  NOT_FOUND = 'Not Found',\n  METHOD_NOT_ALLOWED = 'Method not allowed',\n  INTERNAL_SERVER_ERROR = 'Internal server error',\n  PROXY_ERROR = 'Bad Gateway/Proxy Error',\n  UNREACHABLE_SERVER = 'Server not found'\n}\n\ninterface IURL {\n  protocol?: EPROTOCOL | ESECURE_PROTOCOL;\n  hostname?: string;\n  href?: string;\n  pathname?: string;\n  port?: number;\n  query?: Query;\n}\n\nexport type Query = {\n  [x: string]: string;\n};\nexport type Headers = {\n  [x: string]: string;\n};\n\ninterface IHTTPRequest extends IURL {\n  headers: Headers;\n  body?: string;\n  method: EHTTP_METHOD;\n}\n\ninterface IHTTPResponse {\n  duration: number;\n  statusCode: number;\n  raison: string;\n  headers: Headers;\n  body: string;\n}\n\nconst buildUrl = (params: IHTTPRequest) => {\n  const PROTOCOL = params.protocol || window.location.protocol;\n  const PATHNAME = params.pathname || window.location.pathname;\n  const HOSTNAME = params.hostname || window.location.hostname;\n  const PORT = params.port || window.location.port;\n  const QUERY = params.query\n    ? '?' +\n      Object.entries(params.query)\n        .map((q) => `${q[0]}=${encodeURIComponent(q[1])}`)\n        .join('&')\n    : '';\n\n  if (params.href) {\n    return params.href + QUERY;\n  } else {\n    return `${PROTOCOL}//${HOSTNAME}${\n      PORT ? `${PORT}:` : ''\n    }/${PATHNAME}${QUERY}`;\n  }\n};\n\nfunction getStatusTextByCode(statusCode: number) {\n  let eStatusCode: EHTTP_STATUS_CODE;\n  let sStatusText: EHTTP_STATUS_TEXT;\n  switch (statusCode.toString()) {\n    case '200':\n      eStatusCode = EHTTP_STATUS_CODE.OK;\n      sStatusText = EHTTP_STATUS_TEXT.OK;\n      break;\n    case '400':\n      eStatusCode = EHTTP_STATUS_CODE.BAD_REQUEST;\n      sStatusText = EHTTP_STATUS_TEXT.BAD_REQUEST;\n      break;\n    case '404':\n      eStatusCode = EHTTP_STATUS_CODE.NOT_FOUND;\n      sStatusText = EHTTP_STATUS_TEXT.NOT_FOUND;\n      break;\n    case '405':\n      eStatusCode = EHTTP_STATUS_CODE.METHOD_NOT_ALLOWED;\n      sStatusText = EHTTP_STATUS_TEXT.METHOD_NOT_ALLOWED;\n      break;\n    case '500':\n      eStatusCode = EHTTP_STATUS_CODE.INTERNAL_SERVER_ERROR;\n      sStatusText = EHTTP_STATUS_TEXT.INTERNAL_SERVER_ERROR;\n      break;\n    case '502':\n      eStatusCode = EHTTP_STATUS_CODE.PROXY_ERROR;\n      sStatusText = EHTTP_STATUS_TEXT.PROXY_ERROR;\n      break;\n    case '-1':\n      eStatusCode = EHTTP_STATUS_CODE.UNREACHABLE_SERVER;\n      sStatusText = EHTTP_STATUS_TEXT.UNREACHABLE_SERVER;\n      break;\n    default:\n      LOGGER.error('UNKNOWN HTTP STATUS');\n      eStatusCode = EHTTP_STATUS_CODE.INTERNAL_SERVER_ERROR;\n      sStatusText = EHTTP_STATUS_TEXT.INTERNAL_SERVER_ERROR;\n  }\n  return { text: sStatusText, code: eStatusCode };\n}\n\nexport async function request(params: IHTTPRequest): Promise<IHTTPResponse> {\n  const url = buildUrl(params);\n  const start = Date.now();\n  let axiosResponse = await axios\n    .request({\n      method: params.method,\n      url,\n      headers: params.headers\n    })\n    .catch((error) => {\n      if (error.response) {\n        axiosResponse = error.response;\n      }\n      LOGGER.error('error', error.response);\n    });\n\n  const titi = getStatusTextByCode(axiosResponse ? axiosResponse.status : -1);\n  return {\n    duration: Date.now() - start,\n    statusCode: titi.code,\n    raison: titi.text,\n    headers: axiosResponse ? axiosResponse.headers : {},\n    body: axiosResponse ? axiosResponse.request.responseText : ''\n  };\n}\n","import { EHTTP_METHOD, request, Headers, Query } from '../comm';\nimport i18next from 'i18next';\nimport { Logger } from '../logger';\nconst LOGGER = Logger.getInstance();\n\nconst REACT_APP_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmOGZjNmQ3OTVlMzhiNmI1NTdmOWNhN2FhZTFjYzViMyIsInN1YiI6IjVmN2NmNmFmZmRmYzlmMDAzOGI1OTBkNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7mm9P-EFL-HdQVo2gxao0egAaHujxrm3XiuUzWiLnDY';\nconst REACT_APP_TMBD_KEY = 'f8fc6d795e38b6b557f9ca7aae1cc5b3';\n\nconst headers: Headers = {\n  Authorization: `Bearer ${REACT_APP_TOKEN}`,\n  'Content-Type': 'application/json;charset=utf-8'\n};\n\nasync function movieDbAPIRequest(params: {\n  pathname: string;\n  method: EHTTP_METHOD;\n  query?: Query;\n  headers?: Headers;\n}) {\n  const response = await request({\n    method: EHTTP_METHOD.GET,\n    href: `https://api.themoviedb.org${params.pathname}`,\n    query: {\n      language: i18next.language === 'fr' ? 'fr-FR' : 'en',\n      ...params.query\n    },\n    headers: { ...headers, ...params.headers }\n  }).catch((exception) => {\n    LOGGER.error(exception);\n    throw exception;\n  });\n\n  return response;\n}\nexport default interface Movie {\n  title: string;\n  posterPath: string;\n  releaseDate: string;\n  id: number;\n  voteAverage: number;\n  backdrop_path: string;\n  overview: string;\n}\nexport const getData = async (url: string = ''): Promise<Movie[]> => {\n  const response = await movieDbAPIRequest({\n    method: EHTTP_METHOD.GET,\n    pathname: url.trim() !== '' ? url : '/4/list/1'\n  }).catch((exception) => {\n    LOGGER.error(exception);\n    throw exception;\n  });\n\n  const JSONResponse = JSON.parse(response.body);\n  return JSONResponse.results.map((movie: any) => {\n    return {\n      title: movie.title,\n      posterPath: movie.poster_path,\n      releaseDate: movie.release_date,\n      id: movie.id,\n      voteAverage: movie.vote_average,\n      overview: movie.overview\n    };\n  });\n};\n\nexport async function search(query: string): Promise<Movie[]> {\n  const response = await movieDbAPIRequest({\n    method: EHTTP_METHOD.GET,\n    pathname: '/4/search/movie',\n    query: {\n      query\n    }\n  });\n\n  const JSONResponse = JSON.parse(response.body);\n  return JSONResponse.results.map((movie: any) => {\n    return {\n      title: movie.title,\n      posterPath: movie.poster_path,\n      releaseDate: movie.release_date,\n      id: movie.id,\n      voteAverage: movie.vote_average,\n      overview: movie.overview\n    };\n  });\n}\n\nexport async function findDetails(movieId: number) {\n  const response = await movieDbAPIRequest({\n    method: EHTTP_METHOD.GET,\n    pathname: `/3/movie/${movieId}`,\n    query: {\n      api_key: REACT_APP_TMBD_KEY\n    }\n  });\n\n  return JSON.parse(response.body);\n}\n\nexport async function findCast(movieId: number) {\n  const response = await movieDbAPIRequest({\n    method: EHTTP_METHOD.GET,\n    pathname: `/3/movie/${movieId}/credits`,\n    query: {\n      api_key: REACT_APP_TMBD_KEY\n    }\n  });\n\n  return JSON.parse(response.body);\n}\n\nexport async function getNowPlaying() {\n  const response = await movieDbAPIRequest({\n    method: EHTTP_METHOD.GET,\n    pathname: '/3/movie/now_playing',\n    query: {\n      api_key: REACT_APP_TMBD_KEY,\n      region: 'FR'\n    }\n  });\n\n  return JSON.parse(response.body);\n}\n\nexport function getFavorites() {\n  const jsonFav = window.localStorage.getItem('@MyMovieList::Favorites');\n  return jsonFav ? JSON.parse(jsonFav) : [];\n}\n\nexport function addToFavorites(filmId: number) {\n  const favorites = getFavorites();\n\n  if (!favorites.includes(filmId)) {\n    LOGGER.info('Not prensent, add : ', favorites, filmId);\n    window.localStorage.setItem(\n      '@MyMovieList::Favorites',\n      JSON.stringify([...favorites, filmId])\n    );\n  }\n}\n\nexport function isInFavorites(filmId: number) {\n  const favorites = getFavorites();\n\n  return favorites.includes(filmId);\n}\n\nexport function removeFromFavorites(filmId: number) {\n  const favoritesFilms = getFavorites();\n  const result = favoritesFilms.filter((f: number) => {\n    return f !== filmId;\n  });\n\n  window.localStorage.setItem(\n    '@MyMovieList::Favorites',\n    JSON.stringify(result)\n  );\n}\n","import React, { HTMLProps, ReactElement } from 'react';\nimport './Button.sass';\n\n/**\n * Enumerate for button types\n */\nexport enum EBUTTON_TYPE {\n  BUTTON = 'button',\n  SUBMIT = 'submit',\n  RESET = 'submit'\n}\n\nexport interface IButtonProps extends HTMLProps<HTMLButtonElement> {\n  /**\n   * The button type (\"button\" by default)\n   */\n  type?: EBUTTON_TYPE;\n}\n\n/**\n * The Button component\n * @param props\n */\nexport default function Button(props: IButtonProps): ReactElement {\n  return (\n    <button\n      {...props}\n      type={props.type || EBUTTON_TYPE.BUTTON}\n      className={props.className || 'Button'}\n    >\n      {props.children || props.name}\n    </button>\n  );\n}\n","import Button, { EBUTTON_TYPE } from './Button';\n\nexport { Button, EBUTTON_TYPE };\nexport default Button;\n","export default __webpack_public_path__ + \"static/media/more.8ef2b065.svg\";","import SearchBar from './SearchBar';\n\nexport { SearchBar };\nexport default SearchBar;\n","import React, { FormEvent, ReactElement, useRef } from 'react';\nimport Button, { EBUTTON_TYPE } from '../Button';\nimport './SearchBar.sass';\nimport { useTranslation } from 'react-i18next';\nimport more from '../../icons/more.svg';\n\ninterface ISearchBarProps extends React.HTMLProps<HTMLFormElement> {\n  /**\n   * The callback of search bar when enter or button is clicked\n   */\n  onSearch: (value: string) => void;\n  /**\n   * The definition of input in search bar\n   */\n  inputDefinition?: React.HTMLProps<HTMLInputElement>;\n}\n\n/**\n * The Search bar component with\n * @param props\n */\nexport default function SearchBar({\n  onSearch,\n  inputDefinition,\n  ...props\n}: ISearchBarProps): ReactElement {\n  const { t } = useTranslation();\n  const searchField = useRef<HTMLInputElement>(null);\n\n  /**\n   * Function when Submit event raised\n   * @param event The Submit Event\n   */\n  const onSubmit = (event?: FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    onSearch(searchField.current?.value || '');\n  };\n\n  return (\n    <form {...props} className='SearchBar' onSubmit={onSubmit}>\n      <Button className='Button SearchBarMoreButton' type={EBUTTON_TYPE.BUTTON}>\n        <img src={more} alt='' />\n      </Button>\n      <input\n        placeholder={t('SEARCH')}\n        type='text'\n        ref={searchField}\n        {...inputDefinition}\n      />\n      <Button type={EBUTTON_TYPE.SUBMIT} name={t('SEARCH')} />\n    </form>\n  );\n}\n","import Modal from './Modal';\n\nexport { Modal };\nexport default Modal;\n","import React, { ReactElement, ReactNode } from 'react';\nimport './Modal.sass';\n\ninterface IModalProps {\n  /**\n   * Function called when popup is closed\n   */\n  onClose: Function;\n  /**\n   * Children of componnnt  Modal to display as content of popup\n   */\n  children: ReactNode;\n}\n\n/**\n * Function to whrite popup Component\n * @param props modal window definition\n */\nexport default function Modal(props: IModalProps): ReactElement {\n  /**\n   * Function called when out of pop p is clicked\n   */\n  const onFadeClick = () => {\n    props.onClose();\n  };\n\n  /**\n   * Function to listen click on popup\n   * @param event\n   */\n  const onPopClick = (event: any) => {\n    event.stopPropagation();\n  };\n  return (\n    <div className='ModalFade' onClick={onFadeClick}>\n      <div className='ModalContent' onClick={onPopClick}>\n        {props.children}\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport './Gauge.sass';\nimport { Logger } from '../../logger';\nconst LOGGER = Logger.getInstance();\n\ninterface IGauge {\n  /**\n   * The title of gauge\n   */\n  title?: string;\n  /**\n   * The description of gauge\n   */\n  description?: string;\n  /**\n   * The value of gauge\n   */\n  value: number;\n  /**\n   * The min end of Gauge\n   */\n  min?: number;\n  /**\n   * The max end of Gauge\n   */\n  max?: number;\n  /**\n   * To add CSS in props\n   */\n  style?: React.CSSProperties;\n  /**\n   * To define the background color of gauge\n   */\n  bgGaugeColor?: string;\n  /**\n   * To define the color of gauge\n   */\n  strikeGaugeColor?: string;\n  /**\n   * To define the color of text\n   */\n  fontGaugeColor?: string;\n}\n\n/**\n * Function to create Gauge component\n * @param props Function to create SVG Component\n */\nexport default function Gauge(props: IGauge): ReactElement {\n  const angleOffset = Math.PI / 2;\n  const radius = 150;\n\n  let max = props.max || 100;\n  let min = props.min || 0;\n  let note = props.value;\n  if (min > max) {\n    min = 0;\n    max = 100;\n    LOGGER.error('Invalid définition of min and max values');\n  }\n  if (note > max) {\n    note = max;\n    LOGGER.error('Note out of max range');\n  }\n  if (note < min) {\n    note = min;\n    LOGGER.error('Note out of min range');\n  }\n  const totalRange = max - min;\n  const valueRange = note - min;\n  const ratio = valueRange / totalRange;\n\n  const angle = ratio * 2 * Math.PI;\n\n  enum ECOLORS {\n    GREEN = 'green',\n    RED = 'red',\n    WHITE = 'white'\n  }\n\n  function getColor(): ECOLORS {\n    let color = ECOLORS.WHITE;\n    if (ratio > 0.75) {\n      color = ECOLORS.GREEN;\n    } else if (ratio < 0.5) {\n      color = ECOLORS.RED;\n    }\n    return color;\n  }\n  function getXValue() {\n    return 200 + Math.cos(angle + angleOffset) * radius;\n  }\n  function getYValue() {\n    return 200 - Math.sin(angle + angleOffset) * radius;\n  }\n  return (\n    <svg\n      className='Gauge'\n      style={{ ...props.style }}\n      viewBox='0 0 400 400'\n      xmlns='http://www.w3.org/2000/svg'\n      version='1.1'\n    >\n      <title>{props.title || 'Gauge'}</title>\n      <desc>{props.description || 'A Gauge'}</desc>\n\n      <path\n        d='M0 200 a 200 200 0 1 0 0 -1 z'\n        fill={props.bgGaugeColor || '#FFFFFF'}\n      />\n      {ratio < 1 ? (\n        <path\n          d={`M200 50 A 150 150 0 ${\n            angle < Math.PI ? 0 : 1\n          } 0 ${getXValue()} ${getYValue()}`}\n          fill='transparent'\n          stroke={props.strikeGaugeColor || getColor()}\n          strokeWidth='20'\n        />\n      ) : (\n        <circle\n          cx='200'\n          cy='200'\n          r='150'\n          fill='transparent'\n          stroke={props.strikeGaugeColor || getColor()}\n          strokeWidth='20'\n        />\n      )}\n\n      <text\n        x='200'\n        y='200'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        fontFamily='Helvetica,Verdana, Arial, sans-serif'\n        fontSize='100'\n        fill={props.fontGaugeColor || getColor()}\n      >\n        {note}\n      </text>\n    </svg>\n  );\n}\n","import React, { ReactElement } from 'react';\n\ninterface IRectangle {\n  /**\n   * The main color of rectangle\n   */\n  primaryColor: string;\n  /**\n   * The sencond color of rectangle\n   */\n  secondaryColor: string;\n  /**\n   * The color of text in the middle of rectangle\n   */\n  textColor: string;\n  /**\n   * The Height of SVG\n   */\n  height: number;\n  /**\n   * The Width of SVG\n   */\n  width: number;\n  /**\n   * Th text to print to the user\n   */\n  text: string;\n}\n\nexport default function Rectangle(props: IRectangle): ReactElement {\n  const id = `tt${Date.now()}`.slice(0, -2);\n  return (\n    <svg\n      viewBox={`0 0 ${props.width} ${props.height}`}\n      xmlns='http://www.w3.org/2000/svg'\n      version='1.1'\n      className='Rectangle'\n    >\n      <defs>\n        <linearGradient id={id} x1='0%' y1='0%' x2='45%' y2='45%'>\n          <stop\n            offset='10%'\n            style={{ stopColor: props.secondaryColor, stopOpacity: 1 }}\n          />\n          <stop\n            offset='100%'\n            style={{ stopColor: props.primaryColor, stopOpacity: 1 }}\n          />\n        </linearGradient>\n      </defs>\n      <rect\n        width={props.width}\n        height={props.height}\n        fill={`url(#${id})`}\n        style={{ strokeWidth: 3, stroke: '#000000' }}\n      />\n      Sorry, your browser does not support inline SVG.\n      <text\n        x='50%'\n        y='50%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        fontFamily='Helvetica,Verdana, Arial, sans-serif'\n        fontSize='50'\n        fill={props.textColor}\n      >\n        {props.text}\n      </text>\n    </svg>\n  );\n}\n","import React, { ReactElement, useState } from 'react';\nimport Movie from '../../../model/Movie';\nimport * as Film from '../../../model/Movie';\nimport Gauge from '../../Gauge/Gauge';\nimport './MovieItem.sass';\nimport Rectangle from '../../Rectangle/Rectangle';\n\ninterface IMovieItemProps {\n  /**\n   * Data of Movie\n   */\n  data: Movie;\n  /**\n   * Function called when Movie Item is clicked\n   */\n  onClick: (id: number) => void;\n}\n\n/**\n * Function to get Rectangle when poster of movie is not available\n */\nfunction getEmptyPoster(): ReactElement {\n  return (\n    <Rectangle\n      text='Poster not found'\n      textColor='white'\n      width={500}\n      height={750}\n      primaryColor='#FF0000'\n      secondaryColor='#FFFF00'\n    />\n  );\n}\n\n/**\n * Component to display a movie item with poster, title and release date\n */\nexport default function MovieItem(props: IMovieItemProps): ReactElement {\n  const [imageLoading, setImageLoading] = useState(false);\n  function displayModal() {\n    props.onClick(props.data.id);\n  }\n  return (\n    <div\n      className='MovieItem'\n      onClick={displayModal}\n      style={{\n        border: Film.isInFavorites(props.data.id) ? '1px solid red' : undefined\n      }}\n    >\n      <Gauge\n        value={props.data.voteAverage}\n        title={`${props.data.title} - ${props.data.voteAverage}/10`}\n        description={`The note of movie : ${props.data.title}`}\n        max={10}\n        style={{\n          position: 'absolute',\n          width: '3em',\n          height: 'auto',\n          top: '0.5em',\n          left: '0.5em'\n        }}\n        bgGaugeColor='#222'\n      />\n      {props.data.posterPath ? (\n        <img\n          alt='poster'\n          style={{ display: imageLoading ? 'block' : 'none' }}\n          src={`https://image.tmdb.org/t/p/w500/${props.data.posterPath}`}\n          onLoad={() => {\n            setImageLoading(true);\n          }}\n        />\n      ) : (\n        getEmptyPoster()\n      )}\n      {props.data.posterPath && !imageLoading ? getEmptyPoster() : null}\n      <div>\n        <h3>{props.data.title}</h3>\n        <p>{props.data.releaseDate}</p>\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport Rectangle from '../../Rectangle/Rectangle';\nimport './ActorItem.sass';\n\nexport interface IActorItemProps {\n  person: any;\n}\n\nfunction ActorItem(props: IActorItemProps): ReactElement {\n  return (\n    <div className='ActorItem'>\n      {props.person.profile_path ? (\n        <img\n          alt='actor'\n          src={`https://image.tmdb.org/t/p/w500${props.person.profile_path}`}\n        />\n      ) : (\n        <Rectangle\n          text='Actor not found'\n          textColor='#FFF'\n          width={500}\n          height={750}\n          secondaryColor='#00FFFF'\n          primaryColor='#0000FF'\n        />\n      )}\n\n      <p>\n        <strong>{props.person.name}</strong>\n      </p>\n      <p>{props.person.character}</p>\n    </div>\n  );\n}\n\nexport default ActorItem;\n","import React, { ReactElement } from 'react';\nimport ActorItem, { IActorItemProps } from '../ActorItem/ActorItem';\nimport './ActorList.sass';\n\ninterface IActorListProps {\n  /**\n   * Actor item props list\n   */\n  actors: IActorItemProps[];\n}\n\n/**\n * Function to create Actor List\n * @param actors list of actors\n */\nfunction ActorList({ actors }: IActorListProps): ReactElement {\n  return (\n    <div className={'ActorList'}>\n      {actors.map((actor: any) => (\n        <ActorItem key={actor.id} person={actor} />\n      ))}\n    </div>\n  );\n}\n\nexport default ActorList;\n","export default __webpack_public_path__ + \"static/media/heart.d63fd1bf.svg\";","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport Movie from '../../../model/Movie';\nimport * as Film from '../../../model/Movie';\nimport ActorList from '../../Actor/ActorList/ActorList';\nimport './MovieShow.sass';\nimport icon from '../../../icons/heart.svg';\nimport { Logger } from '../../../logger';\nconst LOGGER = Logger.getInstance();\n\ninterface IMovieShowProps {\n  /**\n   * Data of movie to display\n   */\n  data: Movie;\n}\n\nfunction MovieShow(props: IMovieShowProps): ReactElement {\n  const movie = props.data;\n  const [infos, setInfos] = useState({} as any);\n  const [isFavorite, setIsFavorite] = useState(\n    Film.isInFavorites(props.data.id)\n  );\n  useEffect(() => {\n    const fetchMovieDetails = async (filmId: number) => {\n      let details = await Film.findDetails(filmId).catch((exception) => {\n        LOGGER.error('ERROR', exception);\n      });\n\n      let { crew, cast } = await Film.findCast(filmId).catch((exception) => {\n        LOGGER.error('ERROR', exception);\n      });\n      let detailedFilm = {\n        details,\n        cast,\n        crew\n      };\n\n      setInfos(detailedFilm);\n    };\n\n    fetchMovieDetails(props.data.id);\n  }, [props.data.id]);\n  return (\n    <div className='MovieShow'>\n      <h1>{props.data.title}</h1>\n      <button\n        className={isFavorite ? 'active' : undefined}\n        onClick={() => {\n          isFavorite\n            ? Film.removeFromFavorites(movie.id)\n            : Film.addToFavorites(movie.id);\n          setIsFavorite(!isFavorite);\n        }}\n      >\n        <img src={icon} alt='favorite icone' />\n      </button>\n\n      {infos.details && infos.details.backdrop_path ? (\n        <img\n          alt='banner of movie'\n          className='banner'\n          src={`https://image.tmdb.org/t/p/w500${infos.details.backdrop_path}`}\n        />\n      ) : null}\n      <div\n        style={{\n          boxSizing: 'border-box',\n          overflow: 'auto',\n          padding: '2em'\n        }}\n      >\n        {props.data.posterPath ? (\n          <img\n            className='poster'\n            alt='poster'\n            src={`https://image.tmdb.org/t/p/w500/${props.data.posterPath}`}\n          />\n        ) : null}\n        <ul>\n          <li>\n            <strong>Date</strong> : {props.data.releaseDate}\n          </li>\n          <li>\n            <p>\n              <strong>Resume</strong> : {movie.overview}\n            </p>\n          </li>\n          <li>\n            <p>\n              <strong>Distribution</strong> :\n            </p>\n          </li>\n        </ul>\n        {infos.cast ? <ActorList actors={infos.cast} /> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieShow;\n","import React, { ReactElement } from 'react';\nimport Movie from '../../../model/Movie';\nimport { MovieItem } from '..';\nimport './MoviesList.sass';\n\ninterface IMoviesListProps {\n  /**\n   * Search value to found items in MovieList\n   */\n  search: string;\n  /**\n   * Data for Movies\n   */\n  movies: Movie[];\n  /**\n   * Function called when Movie Item of List is clicked\n   */\n  onClickItem: (id: number) => void;\n}\n\n/**\n * Movie List Component is a Layout Component to display as flex row list of MovieItem Component\n * @param props Data of MovieList\n * @link MovieItem\n */\nexport default function MoviesList(props: IMoviesListProps): ReactElement {\n  const movies = props.movies.filter((movie) => {\n    const re = new RegExp(props.search, 'gi');\n    return props.search.trim() === '' || re.test(movie.title);\n  });\n  return (\n    <div className='MoviesList'>\n      {movies.map((movie: Movie) => (\n        <MovieItem key={movie.id} data={movie} onClick={props.onClickItem} />\n      ))}\n    </div>\n  );\n}\n","import React, { ReactElement, ReactNode } from 'react';\n\nexport interface ITCell {\n  id: string;\n  className?: string;\n  style?: React.CSSProperties;\n  content: string;\n  onClick?: Function;\n  header?: boolean;\n  children?: ReactNode;\n  col?: number;\n}\n\nfunction DataCell(props: ITCell): ReactElement {\n  function onClick() {\n    if (props.onClick) {\n      props.onClick();\n    }\n  }\n  return <td onClick={onClick}>{props.children}</td>;\n}\nfunction HeaderCell(props: ITCell): ReactElement {\n  function onClick() {\n    if (props.onClick) {\n      props.onClick();\n    }\n  }\n  return <th onClick={onClick}>{props.children}</th>;\n}\n\nexport default function TCell(props: ITCell): ReactElement {\n  function onClick() {\n    if (props.onClick) {\n      props.onClick({ id: props.id, col: props.col });\n    }\n  }\n  const Comp = props.header ? HeaderCell : DataCell;\n  return (\n    <Comp\n      id={props.id}\n      col={props.col}\n      onClick={onClick}\n      content={props.content}\n    >\n      {props.content}\n    </Comp>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport TCell, { ITCell } from '../TCell/TCell';\n\nexport interface ITRow extends React.HTMLProps<HTMLTableRowElement> {\n  onClickOnRow?: (target: {\n    row: string;\n    col: { id: string; index: number };\n  }) => void;\n  cells: ITCell[];\n  id: string;\n}\n\nexport default function TRow({\n  onClickOnRow,\n  cells,\n  ...props\n}: ITRow): ReactElement {\n  function onClickCell({ id, col }: any) {\n    if (onClickOnRow) {\n      onClickOnRow({ row: props.id, col: { id, index: col } });\n    }\n  }\n  return (\n    <tr {...props}>\n      {cells.map((cell, index) => {\n        return (\n          <TCell\n            key={cell.id}\n            id={cell.id}\n            col={index}\n            content={cell.content}\n            onClick={onClickOnRow ? onClickCell : undefined}\n            header={cell.header}\n          />\n        );\n      })}\n    </tr>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport TRow, { ITRow } from '../../TRow/TRow';\n\ninterface ITableBody {\n  rows: ITRow[];\n}\n\nexport default function TableBody({ rows }: ITableBody): ReactElement {\n  return (\n    <tbody>\n      {rows\n        ? rows.map((row: ITRow) => {\n            return <TRow key={row.id} id={row.id} cells={row.cells} />;\n          })\n        : null}\n    </tbody>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport TRow, { ITRow } from '../../TRow/TRow';\n\ninterface ITableFooter {\n  rows: ITRow[];\n}\n\nexport default function TableFooter({ rows }: ITableFooter): ReactElement {\n  return (\n    <tfoot>\n      {rows\n        ? rows.map((row: ITRow) => {\n            return <TRow key={row.id} id={row.id} cells={row.cells} />;\n          })\n        : null}\n    </tfoot>\n  );\n}\n","import React, { ReactElement, useState } from 'react';\nimport TRow, { ITRow } from '../../TRow/TRow';\n\ninterface ITableHeader extends React.HTMLProps<HTMLTableSectionElement> {\n  dataRows: ITRow[];\n  isSortable: boolean;\n  onSort: Function;\n}\ninterface ISort {\n  row: string;\n  col: string;\n  alpha: boolean;\n  priority: number;\n}\nexport default function TableHeader({\n  isSortable,\n  dataRows,\n  onSort,\n  ...props\n}: ITableHeader): ReactElement {\n  const [priority, setPriority] = useState(0);\n  const [sort, setSort] = useState<Map<string, ISort>>(\n    new Map<string, ISort>()\n  );\n  function onClick(value: any) {\n    const tempMap = new Map(sort);\n    const clickedItem = tempMap.get(value.col.id);\n    if (clickedItem !== undefined) {\n      tempMap.set(value.col.id, {\n        ...value,\n        alpha: !clickedItem.alpha,\n        priority\n      });\n    } else {\n      tempMap.set(value.col.id, { ...value, alpha: true, priority });\n    }\n    setPriority(priority + 1);\n    setSort(tempMap);\n    onSort(tempMap);\n  }\n  return (\n    <thead {...props}>\n      {dataRows\n        ? dataRows.map((row: ITRow, index: number) => {\n            return (\n              <TRow\n                onClickOnRow={index === 0 ? onClick : undefined}\n                className={isSortable && index === 0 ? 'sortable' : undefined}\n                key={row.id}\n                id={row.id}\n                cells={row.cells}\n              />\n            );\n          })\n        : null}\n    </thead>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport './Table.sass';\nimport TableBody from './TPart/TBody/TBody';\nimport TableFooter from './TPart/TFoot/TFoot';\nimport TableHeader from './TPart/THead/THead';\nimport { ITRow } from './TRow/TRow';\n\nfunction copy(data: any) {\n  return JSON.parse(JSON.stringify(data));\n}\n\ninterface ITable {\n  id?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  onClick?: Function;\n  onChange?: Function;\n  hRows?: ITRow[];\n  bRows?: ITRow[];\n  fRows?: ITRow[];\n  isSortable?: boolean;\n  isFiltrable?: boolean;\n}\n\nfunction Table({ isSortable, hRows, bRows, fRows }: ITable): ReactElement {\n  const [displayedRows, setDisplayedRows] = useState<ITRow[]>(bRows || []);\n\n  useEffect(() => {\n    setDisplayedRows(bRows || []);\n  }, [bRows]);\n  function sortRowsByCol(rows: any, col: any, alpha: boolean) {\n    let tb = rows.map((element: any, index: number) => {\n      return { content: element.cells[col.index].content, rowIndex: index };\n    });\n    tb.sort((a: any, b: any) => {\n      const direction = alpha ? -1 : 1;\n      let r = 0;\n      const aC = a.content;\n      const bC = b.content;\n      if (typeof aC === 'string' && typeof bC === 'string') {\n        r = aC.toLowerCase().localeCompare(bC.toLowerCase());\n      } else if (!isNaN(aC) && !isNaN(bC)) {\n        if (aC > bC) {\n          r = -1;\n        } else if (aC < bC) {\n          r = 1;\n        }\n      }\n      return r * direction;\n    });\n    let startRows = copy(rows);\n    let tmpRows: any = [];\n    tb.forEach((element: any) => {\n      tmpRows.push(startRows[element.rowIndex]);\n    });\n    return copy(tmpRows);\n  }\n\n  function onSort(sortMap: any) {\n    let tb: any = [];\n    sortMap.forEach((value: any) => {\n      tb.push(value);\n    });\n\n    tb.sort((a: any, b: any) => {\n      if (a.priority < b.priority) {\n        return -1;\n      } else if (a.priority > b.priority) {\n        return 1;\n      }\n      return 0;\n    });\n    let tmpRows = copy(displayedRows);\n    tb.forEach((element: any) => {\n      tmpRows = sortRowsByCol(tmpRows, element.col, element.alpha);\n    });\n    setDisplayedRows(tmpRows);\n  }\n  return (\n    <table>\n      <TableHeader\n        isSortable={!!isSortable}\n        dataRows={hRows || []}\n        onSort={onSort}\n      />\n      <TableBody rows={displayedRows || []} />\n      <TableFooter rows={fRows || []} />\n    </table>\n  );\n}\n\nexport default Table;\n","export default __webpack_public_path__ + \"static/media/menu.2f6c0005.svg\";","import React, { ReactElement } from 'react';\nimport './MenuBar.sass';\nimport menu from '../../icons/menu.svg';\n\ninterface IMenuBarProps {\n  /**\n   * The title of MenuBar\n   */\n  title: string;\n}\n\n/**\n * Function to create Menu component\n * @param props  All data of MenuBar definition\n */\nfunction MenuBar(props: IMenuBarProps): ReactElement {\n  return (\n    <header className='MenuBar'>\n      <img src={menu} alt='menu' />\n      <h1>{props.title}</h1>\n    </header>\n  );\n}\n\nexport default MenuBar;\n","enum ETRANSLATION_KEYS {\n  TITLE = 'TITLE',\n  ABOUT = 'ABOUT',\n  SEARCH = 'SEARCH'\n}\nexport default ETRANSLATION_KEYS;\n","import MenuBar from './MenuBar';\n\nexport { MenuBar };\nexport default MenuBar;\n","export default __webpack_public_path__ + \"static/media/fr.43d8308c.svg\";","export default __webpack_public_path__ + \"static/media/image.6c57800c.svg\";","export default __webpack_public_path__ + \"static/media/table.173cddf7.svg\";","import React, { HTMLProps, ReactElement, ReactNode, useState } from 'react';\nimport { Button } from '../Button';\nimport { IButtonProps } from '../Button/Button';\nimport './ToggleButtonGroup.sass';\n\ninterface IToggleButtonProps extends IButtonProps {\n  id: string;\n  value: string;\n  objectContent?: ReactNode;\n}\n\ninterface IToggleButtonGroupProps extends HTMLProps<HTMLDivElement> {\n  buttons: IToggleButtonProps[];\n  onChangeToggle: (value: string) => void;\n  defaultValue?: string;\n}\n\nexport default function ToggleButtonGroup({\n  buttons,\n  onChangeToggle,\n  defaultValue,\n  ...props\n}: IToggleButtonGroupProps): ReactElement {\n  const [activeButton, setActiveButton] = useState<string>(defaultValue || '');\n  return (\n    <div className='ToggleButtonGroup' {...props}>\n      {buttons.map(\n        ({\n          value,\n          objectContent,\n          onClick,\n          ...buttonProps\n        }: IToggleButtonProps) => {\n          return (\n            <Button\n              {...buttonProps}\n              key={buttonProps.id}\n              onClick={(e) => {\n                if (onClick) {\n                  onClick(e);\n                }\n                setActiveButton(value);\n                onChangeToggle(value);\n              }}\n              className={`${buttonProps.className || 'Button'} ${\n                activeButton === value ? 'active' : ''\n              }`}\n            >\n              {objectContent || value}\n            </Button>\n          );\n        }\n      )}\n    </div>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport { Logger } from '../../logger';\n\nimport Movie, * as Data from '../../model/Movie';\nimport SearchBar from '../SearchBar';\nimport Modal from '../Modal';\nimport { MovieShow, MoviesList } from '../Movies';\nimport { Table, ITRow } from '../Table';\nimport MenuBar from '../MenuBar';\nimport Button from '../Button';\n\nimport './Home.sass';\n\nimport ETRANSLATION_KEYS from '../../locales/TranslationKeys';\nimport flagFR from '../../icons/flags/fr.svg';\nimport image from '../../icons/image.svg';\nimport table from '../../icons/table.svg';\nimport ToggleButtonGroup from '../ToggleButton/ToggleButtonGroup';\n\nconst LOGGER = Logger.getInstance();\n\nfunction moviesToTableData(data: Movie[] | undefined) {\n  const hRows: ITRow[] = [];\n  const bRows: ITRow[] = [];\n  if (data) {\n    data.forEach((movie, index) => {\n      const cols = Object.keys(movie);\n      if (index === 0) {\n        hRows.push({\n          id: 'hr_0',\n          cells: cols.map((col) => {\n            return {\n              id: `hr_0_${col}`,\n              content: col,\n              header: true\n            };\n          })\n        });\n      }\n      const tmp: any = movie;\n      bRows.push({\n        id: `br_${index}`,\n        cells: cols.map((col) => {\n          return {\n            id: `br_${index}_${col}`,\n            content: tmp[col]\n          };\n        })\n      });\n    });\n  }\n\n  return {\n    hRows,\n    bRows\n  };\n}\n\nexport default function Home(): ReactElement {\n  const { t, i18n } = useTranslation();\n  const [search, setSearch] = useState('');\n  const [display, setDisplay] = useState('grid');\n  const [movieShowed, setMovieShowed] = useState<Movie>();\n  const [movies, setMovies] = useState<Movie[]>();\n  const [currentLanguage, setCurrentLanguage] = useState(i18next.language);\n  useEffect(() => {\n    Data.getData().then((movies) => {\n      return setMovies(movies);\n    });\n  }, [currentLanguage]);\n  function getSearch(value: string) {\n    if (value !== search) {\n      LOGGER.debug(value);\n      setSearch(value);\n      let data: Promise<any>;\n      if (value.trim() !== '') {\n        data = Data.search(value);\n      } else {\n        data = Data.getData();\n      }\n      data.then((movies) => {\n        return setMovies(movies);\n      });\n    }\n  }\n  function showMovie(movieId: number) {\n    if (movies) {\n      const mov = movies.find((mov) => {\n        return movieId === mov.id;\n      });\n      setMovieShowed(mov);\n    }\n  }\n  const changeLang = (lang: string) => {\n    i18n.changeLanguage(lang);\n    setCurrentLanguage(lang);\n  };\n\n  const movieTableData = moviesToTableData(movies);\n  return (\n    <div className='Home'>\n      <MenuBar title={t(ETRANSLATION_KEYS.TITLE)} />\n      <SearchBar onSearch={getSearch} />\n      <ToggleButtonGroup\n        defaultValue='grid'\n        style={{ position: 'relative', marginLeft: 'auto', marginTop: '5px' }}\n        buttons={[\n          {\n            id: 'a',\n            value: 'table',\n            objectContent: (\n              <img\n                style={{\n                  margin: 'auto',\n                  verticalAlign: 'middle',\n                  width: '24px',\n                  height: '24px'\n                }}\n                src={table}\n                alt=''\n              />\n            )\n          },\n          {\n            id: 'c',\n            value: 'grid',\n            objectContent: (\n              <img\n                style={{\n                  margin: 'auto',\n                  verticalAlign: 'middle',\n                  width: '24px',\n                  height: '24px'\n                }}\n                src={image}\n                alt=''\n              />\n            )\n          }\n        ]}\n        onChangeToggle={(a) => {\n          setDisplay(a);\n        }}\n      />\n      {display === 'table' && movieTableData.bRows ? (\n        <Table\n          hRows={movieTableData.hRows}\n          isSortable\n          bRows={movieTableData.bRows}\n        />\n      ) : null}\n\n      {movies && display === 'grid' ? (\n        <MoviesList search={search} movies={movies} onClickItem={showMovie} />\n      ) : null}\n      {movieShowed &&\n      movieShowed.id &&\n      movieShowed.posterPath &&\n      movieShowed.releaseDate &&\n      movieShowed.title ? (\n        <Modal\n          onClose={() => {\n            setMovieShowed(undefined);\n          }}\n        >\n          <MovieShow data={movieShowed as Movie} />\n        </Modal>\n      ) : null}\n\n      <div\n        style={{\n          margin: 'auto',\n          marginTop: '3em',\n          width: '2em',\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        }}\n      >\n        <Button\n          onClick={() => {\n            changeLang('fr');\n          }}\n        >\n          <img alt='fr-flag' src={flagFR} />\n          FR\n        </Button>\n        <Button\n          onClick={() => {\n            changeLang('en');\n          }}\n        >\n          EN\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport './fonts.sass';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\nimport Home from './components/Home/Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}